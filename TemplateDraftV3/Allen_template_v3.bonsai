<?xml version="1.0" encoding="utf-8"?>
<WorkflowBuilder Version="2.6.0"
                 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                 xmlns:gl="clr-namespace:Bonsai.Shaders;assembly=Bonsai.Shaders"
                 xmlns:gli="clr-namespace:Bonsai.Shaders.Input;assembly=Bonsai.Shaders"
                 xmlns:rx="clr-namespace:Bonsai.Reactive;assembly=Bonsai.Core"
                 xmlns="https://bonsai-rx.org/2018/workflow">
  <Workflow>
    <Nodes>
      <Expression xsi:type="IncludeWorkflow" Path="Extensions\Allen.InitView.bonsai" />
      <Expression xsi:type="PublishSubject">
        <Name>Draw</Name>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="gl:RenderFrame" />
      </Expression>
      <Expression xsi:type="IncludeWorkflow" Path="BonVision:Logging.FrameEventLogger.bonsai">
        <Name>Allen.Log</Name>
        <Append>false</Append>
        <Overwrite>true</Overwrite>
        <Suffix>None</Suffix>
      </Expression>
      <Expression xsi:type="IncludeWorkflow" Path="BonVision:Logging.LogEvent.bonsai">
        <Format>{{"event": "Frame"}}</Format>
        <Selector xsi:nil="true" />
        <Name>Allen.Log</Name>
      </Expression>
      <Expression xsi:type="GroupWorkflow">
        <Name>ExperimentalWorkflow</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="SubscribeSubject">
              <Name>Draw</Name>
            </Expression>
            <Expression xsi:type="IncludeWorkflow" Path="Extensions\Allen.DrawPhotodiode.bonsai" />
            <Expression xsi:type="IncludeWorkflow" Path="Extensions\Allen.InitLick.bonsai" />
            <Expression xsi:type="BehaviorSubject">
              <Name>Lick</Name>
            </Expression>
            <Expression xsi:type="IncludeWorkflow" Path="BonVision:Logging.LogEvent.bonsai">
              <Format>{{"event": "Lick"}}</Format>
              <Selector xsi:nil="true" />
              <Name>Allen.Log</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="gli:KeyPress">
                <gli:KeyChar>114</gli:KeyChar>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="BooleanProperty">
                <Value>true</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="BehaviorSubject">
              <Name>Reward</Name>
            </Expression>
            <Expression xsi:type="IncludeWorkflow" Path="BonVision:Logging.LogEvent.bonsai">
              <Format>{{"event": "Reward"}}</Format>
              <Selector xsi:nil="true" />
              <Name>Allen.Log</Name>
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>Reward</Name>
            </Expression>
            <Expression xsi:type="IncludeWorkflow" Path="Extensions\Allen.OutputReward.bonsai" />
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="gli:KeyPress">
                <gli:KeyChar>115</gli:KeyChar>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="BooleanProperty">
                <Value>true</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="BehaviorSubject">
              <Name>Sync1</Name>
            </Expression>
            <Expression xsi:type="IncludeWorkflow" Path="BonVision:Logging.LogEvent.bonsai">
              <Format>{{"event": "Sync1"}}</Format>
              <Selector xsi:nil="true" />
              <Name>Allen.Log</Name>
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>Sync1</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="BooleanProperty">
                <Value>false</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="IncludeWorkflow" Path="Extensions\Allen.OutputSync.bonsai" />
            <Expression xsi:type="SubscribeSubject">
              <Name>Draw</Name>
            </Expression>
            <Expression xsi:type="IncludeWorkflow" Path="Extensions\Allen.ReadWheel.bonsai" />
            <Expression xsi:type="IncludeWorkflow" Path="BonVision:Logging.LogEvent.bonsai">
              <Format>{{"event":"Wheel", "speed":{0}}}</Format>
              <Selector>it</Selector>
              <Name>Allen.Log</Name>
            </Expression>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="2" To="3" Label="Source1" />
            <Edge From="3" To="4" Label="Source1" />
            <Edge From="5" To="6" Label="Source1" />
            <Edge From="6" To="7" Label="Source1" />
            <Edge From="7" To="8" Label="Source1" />
            <Edge From="9" To="10" Label="Source1" />
            <Edge From="11" To="12" Label="Source1" />
            <Edge From="12" To="13" Label="Source1" />
            <Edge From="13" To="14" Label="Source1" />
            <Edge From="15" To="16" Label="Source1" />
            <Edge From="16" To="17" Label="Source1" />
            <Edge From="18" To="19" Label="Source1" />
            <Edge From="19" To="20" Label="Source1" />
            <Edge From="21" To="22" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="gl:Timer">
          <gl:DueTime>PT10S</gl:DueTime>
        </Combinator>
      </Expression>
      <Expression xsi:type="IncludeWorkflow" Path="Extensions\Allen.End.bonsai" />
      <Expression xsi:type="IncludeWorkflow" Path="BonVision:Logging.LogEvent.bonsai">
        <Format>{{"event": "EndFrame"}}</Format>
        <Selector xsi:nil="true" />
        <Name>Allen.Log</Name>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:TakeUntil" />
      </Expression>
      <Expression xsi:type="WorkflowOutput" />
    </Nodes>
    <Edges>
      <Edge From="0" To="1" Label="Source1" />
      <Edge From="2" To="3" Label="Source1" />
      <Edge From="3" To="4" Label="Source1" />
      <Edge From="4" To="5" Label="Source1" />
      <Edge From="5" To="9" Label="Source1" />
      <Edge From="6" To="7" Label="Source1" />
      <Edge From="7" To="8" Label="Source1" />
      <Edge From="8" To="9" Label="Source2" />
      <Edge From="9" To="10" Label="Source1" />
    </Edges>
  </Workflow>
</WorkflowBuilder>